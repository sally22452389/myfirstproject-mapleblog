"""
Django settings for my_blog project.

Generated by 'django-admin startproject' using Django 3.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'my_1r%txueleo53kn-)9ez34xs4-n@x4@+kr4v1o^9a#bbdro6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['34.80.28.255']


AUTHENTICATION_BACKENDS = ( 
    # Django後台可獨立於allauth登錄
    'django.contrib.auth.backends.ModelBackend' ,

    # 配置allauth獨有的認證方法，如email登錄
    'allauth.account.auth_backends.AuthenticationBackend' , 
)

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django.contrib.sites',

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.github' , 
    'allauth.socialaccount.providers.weibo' , 
    'allauth.socialaccount.providers.facebook',

    'password_reset',  
    'article',
    'userprofile',
    'comment',
    'taggit',
    'ckeditor', # 文本編輯器
    'mptt',
    'notifications', # 通知
    'notice', # 公告
]

# 設置站點
SITE_ID = 1

# 登錄成功後重定向
LOGIN_REDIRECT_URL = '/'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'my_blog.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')], # 定義模板位置
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'my_blog.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'zh-hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "static"),
)

STATIC_URL = '/static/'

STATIC_ROOT = os.path.join(BASE_DIR, 'collected_static')

X_FRAME_OPTIONS = 'SAMEORIGIN'

# SMTP服務器
EMAIL_HOST = 'smtp.gmail.com'

EMAIL_HOST_USER = 'mapleblogforum@gmail.com'

EMAIL_HOST_PASSWORD = '0925135300'
# 發送郵件端口
EMAIL_PORT = 587

EMAIL_USE_TLS = True
# 默認發件人
DEFAULT_FROM_EMAIL = 'maple blog <mapleblogforum@gmail.com>'
# https://django-allauth.readthedocs.io/en/latest/configuration.html 
# 不要求驗證仍會發送驗證郵件'optional' / 必須先驗證才可以登錄'mandatory' / 認證郵件不會發送'none'
ACCOUNT_EMAIL_VERIFICATION = 'none'
# 同理，但是作用於第三方帳號的註冊。
SOCIALACCOUNT_EMAIL_VERIFICATION = 'none'
# 'username_email' / 'user' / 'email'：指定登錄方法
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
# 註冊本地用戶時，是否必須填寫郵箱。
ACCOUNT_EMAIL_REQUIRED = True 

# 日誌紀錄
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
    },
    'handlers': {
        'console': {
            'level': 'INFO',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
            'formatter': 'verbose',
        },
        'file': {
            'level': 'WARNING',
            # 'class': 'logging.FileHandler',
            'class': 'logging.handlers.TimedRotatingFileHandler', # Python內置的隨時間分割日誌文件的模塊
            'when': 'midnight', # 分割時間 凌晨
            'backupCount': 30, # 日誌文件保存日期30天
            'filename': os.path.join(BASE_DIR, 'logs/debug.log'),
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['console'],
            'propagate': True,
        },
        'django.request': {
            'handlers': ['file', 'mail_admins'],
            'level': 'WARNING',
            'propagate': False,
        },
    }
}


# 媒體圖
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')

CKEDITOR_CONFIGS = { 
    # django-ckeditor默認使用default配置
    'default': { 
        #編輯器寬度自適應
        'width':'auto' , 
        'height':'250px' , 
        # tab鍵轉換空格數
        'tabSpaces':  4 , 
        # 工具欄風格
        'toolbar' : 'Custom' , 
        # 工具欄按鈕
        'toolbar_Custom': [ 
            # 表情代碼塊
            [ 'Smiley' ,'CodeSnippet' ],  
            # 字體風格
            [ 'Bold','Italic','Underline' ,  'RemoveFormat',  'Blockquote' ], 
            # 字體顏色
            [ 'TextColor' ,  'BGColor' ], 
            # 鏈接
            [ 'Link' ,  'Unlink' ], 
            # 列表
            [ 'NumberedList' ,  'BulletedList' ], 
            # 最大化
            [ 'Maximize' ] 
        ], 
        # 加入代碼塊插件
        'extraPlugins': ','.join(['codesnippet', 'prism', 'widget', 'lineutils']),
    } 
}

